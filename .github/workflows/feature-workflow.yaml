
name: Obi Test

on:
  push:
    branches:
      - feature/obi

jobs:
  app-containerize:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build and push Docker image
      env:
        ECR_REGISTRY: 665403465716.dkr.ecr.ap-south-1.amazonaws.com
        IMAGE_TAG: v1
      run: |
        docker build -t erp-lms-obi:v1 .
        docker tag erp-lms-obi:v1 $ECR_REGISTRY/erp-lms-obi:v1
        docker push $ECR_REGISTRY/erp-lms-obi:v1
  deploy:
    needs: app-containerize
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: SSH into EC2 instance and deploy Docker container
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.SERVER_IP }}
        port: ${{ secrets.SERVER_PORT }}
        username: ${{ secrets.SERVER_USERNAME }}
        password: ${{ secrets.EC2_PASSWORD }}
        script: |
            docker pull 665403465716.dkr.ecr.ap-south-1.amazonaws.com/erp-lms-obi:v1
            docker run -d --name erp-lms-container -p 8080:8080 erp-lms-obi:v1
